plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.devtools.ksp' version '1.7.0-1.0.6'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk = libs.versions.compileSdk.get() as Integer
    namespace 'com.earth.testomania'

    defaultConfig {
        applicationId "com.earth.testomania"
        minSdk libs.versions.minSdk.get() as Integer
        targetSdk libs.versions.targetSdk.get() as Integer
        versionCode libs.versions.versionCode.get() as Integer
        versionName libs.versions.versionName.get()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            keyAlias System.getenv("KEYSTORE_ALIAS")
            keyPassword System.getenv("KEYSTORE_PRIVATE_KEY")
            storeFile file("../keystore.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
        }
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false //for build optimization
            ext.enableCrashlytics = false //for build optimization
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
        kotlinCompilerVersion '1.5.21'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }
}

dependencies {

    implementation(libs.bundles.androidx)
    implementation(libs.bundles.kiwi)
    implementation(libs.bundles.google)
    implementation(libs.coil)
    implementation(libs.bundles.firebase)
    implementation(libs.bundles.androidx.compose)
    implementation(libs.bundles.retrofit)
    implementation(libs.bundles.moshi)
    implementation(libs.bundles.coroutines)

    testImplementation(libs.bundles.test)
    androidTestImplementation(libs.bundles.android.test)
    debugImplementation(libs.bundles.debug.tools)

    kapt(libs.androidx.room.compiler)
    kapt(libs.moshi.codegen)
    kapt(libs.google.hilt.androidCompiler)
    kapt(libs.google.hilt.compiler)
    ksp(libs.raamcosta.destinations.ksp)
}

task("version") {
    doLast {
        println "versionName: " + android.defaultConfig.versionName
    }
}
